{"version":3,"sources":["components/Container/Container.js","components/App/App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","App","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wPAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,ICiFxBI,MAvEf,WAiDE,OACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAgBM,UAAW,S,QC1DjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,kBCX1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.ba17fddb.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Container from '../Container';\r\n// import Searchbar from '../Searchbar';\r\n// import MyLoader from '../Loader';\r\n// import Button from '../Button';\r\n// import { fetchPictures } from '../../Services/picturesApi';\r\n// import scrollPageDown from '../../helpers/Scroll';\r\n// import NoFound from '../NoFound';\r\n// import ImageGallery from '../ImageGallery';\r\n// import Modal from '../Modal';\r\n\r\nfunction App() {\r\n  // const [page, setPage] = useState(1);\r\n  // const [searchQuery, setSearchQuery] = useState('');\r\n  // const [images, setImages] = useState([]);\r\n  // const [loading, setLoading] = useState(false);\r\n  // const [showModal, setShowModal] = useState(false);\r\n  // const [largeImage, setLargeImage] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   if (!searchQuery) return;\r\n  //   setLoading(true);\r\n  //   const fetchImages = async () => {\r\n  //     try {\r\n  //       const hits = await fetchPictures(searchQuery, page);\r\n  //       setImages(prevImages => [...prevImages, ...hits]);\r\n  //       if (page !== 1) {\r\n  //         scrollPageDown();\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.log(error.message);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchImages();\r\n  // }, [page, searchQuery]);\r\n\r\n  // const handleOnLoadClick = () => {\r\n  //   setLoading(true);\r\n  //   setPage(prevPage => prevPage + 1);\r\n  //   setLoading(false);\r\n  // };\r\n\r\n  // const handleClickImages = largeImage => {\r\n  //   setLargeImage(largeImage);\r\n  //   toggleModal();\r\n  // };\r\n  // const toggleModal = () => {\r\n  //   setShowModal(!showModal);\r\n  // };\r\n\r\n  // const fetchImagesBySubmit = searchQuery => {\r\n  //   setSearchQuery(searchQuery);\r\n  //   setImages([]);\r\n  //   setPage(1);\r\n  //   setLoading(true);\r\n  // };\r\n\r\n  return (\r\n    <Container>\r\n      <ToastContainer autoClose={4000} />\r\n      {/* <Searchbar onSubmit={fetchImagesBySubmit} />\r\n      {loading && <MyLoader />}\r\n      {images.length !== 0 ? (\r\n        <ImageGallery images={images} onOpenModal={handleClickImages} />\r\n      ) : (\r\n        searchQuery !== '' && <NoFound />\r\n      )}\r\n      {loading && !showModal && <MyLoader />}\r\n      {!loading && images[0] && <Button onClick={handleOnLoadClick} />}\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          {loading && <MyLoader />}\r\n          <img src={largeImage.largeImageURL} alt={largeImage.tags} />\r\n        </Modal>\r\n      )} */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2_YcH\"};"],"sourceRoot":""}